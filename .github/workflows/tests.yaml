# Largely taken from https://github.com/PyO3/pyo3/blob/master/.github/workflows/ci.yml

name: Test Module
on:
  pull_request:
    branches: [main, develop]
env:
  CARGO_TERM_COLOR: always

jobs:
  # fmt:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: stable
  #         profile: minimal
  #         components: rustfmt
  #     - name: Check rust formatting (rustfmt)
  #       run: cargo fmt --all -- --check

  build-mac-win:
    # needs: [fmt]
    name: python${{ matrix.python-version }}-${{ matrix.platform.python-architecture }} ${{ matrix.platform.os }} ${{ matrix.msrv }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8, 3.9]
        platform: [
          { os: "macOS-latest",   python-architecture: "x64", rust-target: "x86_64-apple-darwin" },
          { os: "windows-latest", python-architecture: "x64", rust-target: "x86_64-pc-windows-msvc" },
        ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.platform.python-architecture }}
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.platform.rust-target }}
          profile: minimal
          default: true
      - name: Install cargo test and setup.py dependencies
        run: |
          python -m pip install -U pip 
          pip install wheel numpy pytest setuptools wheel setuptools-rust
      # - name: Test
      #   run: cargo test --no-default-features --target ${{ matrix.platform.rust-target }}
      # - name: Run python tests
      #   run: |
      #     python setup.py pytest
      - name: publish
        env:
          TWINE_PASSWORD: ${{ secrets.MATURIN_PASSWORD_TEST }}
          TWINE_USERNAME: __token__
        run: |
          python setup.py bdist_wheel 
          twine upload dist/* --repository-url https://test.pypi.org/legacy/    env:
      RUST_BACKTRACE: 1
      RUSTFLAGS: "-D warnings"

  build-linux:
    # needs: [fmt]
    name: Publish linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Publish
        env:
          TWINE_PASSWORD: ${{ secrets.MATURIN_PASSWORD_TEST }}
          TWINE_USERNAME: __token__
        run: |
          docker run --rm -v `pwd`:/io quay.io/pypa/manylinux2014_x86_64 /io/build-wheels.sh
          twine upload dist/* --repository-url https://test.pypi.org/legacy/

    env:
      RUST_BACKTRACE: 1
      RUSTFLAGS: "-D warnings"


  pypi-test-install:
    needs: [build-linux, build-mac-win]
    name: python ${{ matrix.platform.os }} ${{ matrix.msrv }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform: [
          { os: "macOS-latest", },
          { os: "ubuntu-latest", },
          { os: "windows-latest", },
        ]
    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
          architecture: x64
      - name: Running pip install
        run: |
          pip install --index-url https://test.pypi.org/simple/ liesym
          python -c "import liesym; liesym.A(2).positive_roots"


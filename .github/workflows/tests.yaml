# Largely taken from https://github.com/PyO3/pyo3/blob/master/.github/workflows/ci.yml

# Cargo test is broken right now because of extension module
# https://github.com/PyO3/pyo3/issues/1084

name: Test Module
on:
  pull_request:
    branches: [main, develop]
env:
  CARGO_TERM_COLOR: always

jobs:
  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: rustfmt
      - name: Check rust formatting (rustfmt)
        run: cargo fmt --all -- --check

  sphinx-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install Deps
        run: python -m pip install sphinx-math-dollar groundwork-sphinx-theme numpydoc pydata_sphinx_theme sympy numpy
      - name: Build Warnings As Errors
        run: |
          cd docs
          make html SPHINXOPTS="-W"

  build-mac-win:
    needs: [fmt, sphinx-test]
    name: python${{ matrix.python-version }}-${{ matrix.platform.python-architecture }} ${{ matrix.platform.os }} ${{ matrix.msrv }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8, 3.9]
        platform: [
          { os: "macOS-latest",   python-architecture: "x64", rust-target: "x86_64-apple-darwin" },
          { os: "windows-latest", python-architecture: "x64", rust-target: "x86_64-pc-windows-msvc" },
        ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.platform.python-architecture }}
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.platform.rust-target }}
          profile: minimal
          default: true
      - name: Install cargo test and setup.py dependencies
        run: |
          python -m pip install -U pip 
          pip install wheel numpy sympy pytest setuptools wheel setuptools-rust twine symengine
      # - name: Test
      #   run: cargo test --no-default-features --target ${{ matrix.platform.rust-target }}
      - name: Run python tests
        run: |
          python setup.py pytest
    env:
      RUST_BACKTRACE: 1
      RUSTFLAGS: "-D warnings"

  test-linux:
    needs: [fmt, sphinx-test]
    name: Test linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]
    env:
      RUST_BACKTRACE: 1
      RUSTFLAGS: "-D warnings"
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-gnu
          profile: minimal
          default: true
      - name: Prepare LD_LIBRARY_PATH
        run: echo LD_LIBRARY_PATH=${pythonLocation}/lib >> $GITHUB_ENV
      - name: Install cargo test and setup.py dependencies
        run: |
          python -m pip install -U pip 
          pip install wheel numpy sympy pytest setuptools wheel setuptools-rust symengine
      # - name: Test
      #   run: cargo test --no-default-features --target x86_64-unknown-linux-gnu
      - name: Run python tests
        run: |
          python setup.py pytest

